[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-studio"
version = "0.1.0"
description = "FastUI와 Plotly를 통합한 RAG와 MCP 대화형 AI 스튜디오"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "AI Studio Team"},
]
keywords = ["ai", "rag", "mcp", "fastui", "plotly"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Core FastAPI and FastUI
    "fastapi>=0.104.0",
    "fastui>=0.4.0",
    "python-multipart>=0.0.6",
    "uvicorn[standard]>=0.24.0",
    
    # CLI Interface
    "typer>=0.9.0",
    
    # Data Validation and Models
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Visualization
    "plotly>=5.17.0",
    
    # Security and Encryption
    "cryptography>=41.0.0",
    
    # HTTP Client
    "httpx>=0.25.0",
    
    # Async Support
    "asyncio-mqtt>=0.13.0",
    
    # Configuration
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
# AI User dependencies (minimal, basic functionality)
user = []

# AI Evaluator dependencies (metrics and visualization)
eval = [
    "scipy>=1.11.0",
    "statsmodels>=0.14.0",
]

# AI Developer dependencies (full development and debugging suite)
dev = [
    # Data Analysis
    "pandas>=2.1.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "scikit-learn>=1.3.0",
    
    # Development Environment
    "jupyter>=1.0.0",
    "ipython>=8.17.0",
    
    # Profiling
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
    "py-spy>=0.3.14",
    
    # Code Quality
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[project.scripts]
ais = "app.main:app"

[project.urls]
Homepage = "https://github.com/ai-studio/ai-studio"
Documentation = "https://ai-studio.readthedocs.io"
Repository = "https://github.com/ai-studio/ai-studio"
Issues = "https://github.com/ai-studio/ai-studio/issues"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]